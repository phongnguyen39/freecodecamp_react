{"version":3,"sources":["logo.svg","serviceWorker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","URLs","href","target","Footer","props","className","React","Component","Descriptions","CompTypes","ChildComponent","ParentComponent","CurrentDate","date","DaysOfWeek","dow","join","Calendar","Date","DefaultProp","someKey","defaultProps","UsingThis","this","thisExample","AboutState","FirstStatefulComponent","state","stateType","stateType2","SecondStatefulComponent","initialState","handleClick","bind","setState","console","log","onClick","MainApp","alt","array","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89dd41ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst github = <a href='https://www.github.com' target='_blank' >Github</a>\n\nconst URLs = () => {\n  return (\n    <div>\n      <a href='https://www.github.com' target='_blank' >Github</a>\n      <a href='https://www.linkedin.com/in/phongnguyenmha' target='_blank' >Linkedin</a>\n      <a href='mailto: developer.phong@gmail.com' target='_blank' >Email</a>\n    </div>\n  )\n}\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className='footer'>\n        {/* <h1>FOoter</h1> */}\n        <URLs></URLs>\n      </div>\n    )\n  }\n}\n\n// class SVGs extends React.Component {\n\n//   constructor(props){\n//     super(props);\n//   }\n\n//   render(){\n//     return (\n//       <div>\n\n//         <svg>\n//           <circle cx='50' cy='50' r='20' stroke='green' stroke-width='1' fill='yellow' />\n//         </svg>\n//       </div>\n//     );\n//   }\n// }\n\n\n// const jax =()=>{\n//   console.log(\"jax\")\n//   return(\n//     <div><h1>Slap</h1>></div>\n//   )\n// }\n\n\n\nclass Descriptions extends React.Component {\n  render() {\n    return (\n      <div className='p_components'>\n        <h3>What are you seeing on this webpage?</h3>\n        <p>Outer boxes are <i>parent components</i></p>\n        <p>Gray boxes represents <i>child components</i></p>\n        <p>They were applied with <i>classNames</i></p>\n        <br />\n        {/* <svg>\n          <circle cx='50' cy='50' r='40' stroke='green' stroke-width='4' fill='yellow' />\n        </svg> */}\n      </div>\n    )\n  }\n}\n\nconst MyComponent = function () {\n  return (\n    <div>\n      <h1>MyComponent</h1>\n    </div>\n  )\n}\n\nclass CompTypes extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div className='p_components'>\n        <h3>Different types of components in React</h3>\n        <h5 className='c_components' >pure JSX element syntax <pre><code>const JsxELement = </code></pre></h5>\n        {/* <h5 className='c_components' onClick={jax}>pure JSX element syntax {jax}</h5> */}\n        <h5 className='c_components'>Stateless Functional component syntax <pre><code>const FunctionalComponent =()=> {}</code></pre></h5>\n        <h5 className='c_components'>ES6 class component syntax <pre><code>class Es6ClassComponent extends React.Component{}</code></pre></h5>\n      </div>\n    )\n  }\n}\n\nconst ChildComponent = () => {\n  return (\n    <div className='c_components'>\n      <p>I'm a child component</p>\n\n    </div>\n  )\n}\n\nconst ParentComponent = () => {\n  return (\n    <div className='p_components'>\n      <p1>I'm a parent component</p1>\n      <ChildComponent />\n    </div>\n  )\n}\n\nconst CurrentDate = (props) => {\n  return (\n    <div className='c_components'>\n      <p>Current Date: {props.date}</p>\n    </div>\n  )\n}\n\n\n\n\nconst DaysOfWeek = (props) => {\n  return (\n    <div className='c_components'>\n      <p>{props.dow.join(' | ')}</p>\n    </div>\n  )\n}\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className='p_components'>\n        <h3>This is an example of passing properties between components</h3>\n        <h3>Calendar Component</h3>\n        <CurrentDate date={Date()} />\n        <p>This Calendar component consist of two parts:</p>\n        <ul>\n          <li>ES6 class component</li>\n          <li>Stateless functional component</li>\n        </ul>\n        <p>The ES6 class component has the constructor, super, and props.  .   The stateless functional component has the props and date attribute.  It is nested in the ES6 component.</p>\n        <DaysOfWeek dow={[\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"]} />\n      </div>\n    )\n  }\n}\n\nconst DefaultProp = (props) => {\n  return (\n    <div className='p_components'>\n      <p>Default Prop</p>\n      <p>.defaultProps passes a default value as a prop through a component if none is provided.   It can be overidden when another value is explicitly passed.</p>\n      <p className='c_components'>{props.someKey}</p>\n      <p>Type something below to override the default</p>\n    </div>\n  )\n}\n\nDefaultProp.defaultProps = {\n  someKey: \"I'm a default prop value\"\n}\n\nclass UsingThis extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className='p_components'>\n        <h3>Passing Props from ES6 Class Component to ES6 Class Components</h3>\n        <p>Previous examples have been passing from ES6 Class to stateless function components</p>\n        <p>Major difference is the use of \"this\" in front of the prop. </p>\n        <p className=\"c_components\">{this.props.thisExample}</p>\n      </div>\n    )\n  }\n}\n\nconst AboutState = () => {\n  return (\n    <div className='p_components'>\n      \n        <p>A stateless functional component is any function you write which accepts props and returns JSX.</p>\n        <p>A stateless component, on the other hand, is a class that extends React.Component, but does not use internal state (covered in the next challenge).</p> \n        <p>Finally, a stateful component is a class component that does maintain its own internal state. You may see stateful components referred to simply as components or React components.</p>\n      <a href='https://www.freecodecamp.org/learn/front-end-libraries/react/review-using-props-with-stateless-functional-components'>Ref: freecodecamp</a>\n    </div>\n  )\n}\n\nclass FirstStatefulComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      stateType: 'Stateful with this.state.data written directly into the return statement',\n      stateType2: 'Stateful with this.state.data written in the render before the return statement. Writing it this way allows you to perform Javascript functions.  The this.state.data is assigned to avariable without curly braces'\n    }\n  }\n  \n  render() {\n    return (\n    <div className ='p_components'>\n      <h3>Stateful Components</h3>\n    <p>State syntax is within the constructor.  this.state = key value object</p>\n      <p className= 'c_components'>{this.state.stateType}</p>\n      <p>The state is encapsulated to it's own component.  It can be passed as props to another component though.</p>\n      <p>When the state data of a component is updated then it updates the virtual DOM which then updates the DOM.  This allows the UI to change only where needed</p>\n      <p className= 'c_components'>{this.state.stateType2}</p>\n\n    </div>\n    )\n  }\n}\n\nclass SecondStatefulComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState: 'Initial State'\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      initialState: 'Bloop!'\n    })\n    console.log('boo')\n  }\n\n  render() {\n    return (\n      <div className='p_components'>\n        <h3>Updating the initial state</h3>\n        <p>This is done by using this.setState(). This method updates the value in the state object initially set in the constructor</p>\n        <button onClick={this.handleClick}>Click to Update Initial State</button>\n      <p className='c_components'>{this.state.initialState}</p>\n      </div>\n    )\n  }\n}\n\nclass MainApp extends React.Component {\n  // constructor() {\n  //   super(props)\n  // }\n\n  render() {\n    return (\n      <div className='container'>\n        <div>\n          <h1 className='header'>React Playground</h1>\n          <a href='https://github.com/phongnguyen39/freecodecamp_react' alt=\"Github link to readme\" target='_blank'>For full notes see Github repo</a>\n          {/* <SVGs /> */}\n          <Descriptions array={['rate', 'fart']} />\n          <CompTypes />\n          <ParentComponent />\n          {/* <PassingProps /> */}\n          <Calendar />\n          <DefaultProp />\n          <DefaultProp someKey='Overidden Prop' />\n          <UsingThis thisExample='this.props.data' />\n          <AboutState />\n          <FirstStatefulComponent />\n          <SecondStatefulComponent />\n\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <MainApp />,\n  document.getElementById('root')\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}